paste(EmailMessage," More than ",#
  Missing_rows_for_removal,#
  "% of variables data missing for rows ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=","))#
,", deleting. ",sep="")
paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for columns '",#
    do.call(paste, c(as.list(removecols)),sep=", "),#
  "', deleting. ",sep="")
paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for columns '",#
    do.call(paste,sep=", ", c(as.list(removecols))),#
  "', deleting. ",sep="")
paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for columns '",#
    do.call(paste, c(as.list(removecols))),#
  "', deleting. ",sep="")
paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for columns '",#
    do.call(paste, as.list(removecols)),#
  "', deleting. ",sep="")
paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for columns '",#
    paste(as.list(removecols))),#
  "', deleting. ",sep="")
paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for columns '",#
    paste(as.list(removecols)),#
  "', deleting. ",sep="")
paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for columns '",#
    do.call(paste, c(as.list(removecols),sep=", ")),#
  "', deleting. ",sep="")
paste(EmailMessage," More than ",#
  Missing_rows_for_removal,#
  "% of variables data missing for rows ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=","))#
,", deleting. ",sep="")
data <- titanic3#
#
EmailMessage = "I'm assuming your files are Missing not at random. "#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
removecols=names(badcols[badcols>=Missing_cols_for_removal])#
data <- data[ , -which(names(data) %in% removecols)]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for columns '",#
    do.call(paste, c(as.list(removecols),sep=", ")),#
  "', deleting. ",sep="")#
#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
data <- data[which(badrows<=5),]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_rows_for_removal,#
  "% of variables data missing for rows ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", "))#
,", deleting. ",sep="")
EmailMessage
data <- FIPS#
#
EmailMessage = "I'm assuming your files are Missing not at random. "#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
removecols=names(badcols[badcols>=Missing_cols_for_removal])#
data <- data[ , -which(names(data) %in% removecols)]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for column(s) '",#
    do.call(paste, c(as.list(removecols),sep=", ")),#
  "', deleting. ",sep="")#
#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
data <- data[which(badrows<=5),]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_rows_for_removal,#
  "% of variables data missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", "))#
,", deleting. ",sep="")
EmailMessage
md.pattern(df)
md.pattern(data)
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
data <- titanic3#
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
EmailMessage = "I'm assuming your files are Missing not at random. Any blank data is converted to NA"#
#
data[data == ""] <- NA#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
removecols=names(badcols[badcols>=Missing_cols_for_removal])#
data <- data[ , -which(names(data) %in% removecols)]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for column(s) '",#
    do.call(paste, c(as.list(removecols),sep=", ")),#
  "', deleting. ",sep="")#
#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
data <- data[which(badrows<=5),]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_rows_for_removal,#
  "% of variables data missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", "))#
,", deleting. ",sep="")
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
data <- titanic3#
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))#
#
EmailMessage = "I'm assuming your files are Missing not at random. Any blank data is converted to NA"#
#
data[data == ""] <- NA#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
removecols=names(badcols[badcols>=Missing_cols_for_removal])#
data <- data[ , -which(names(data) %in% removecols)]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for column(s) '",#
    do.call(paste, c(as.list(removecols),sep=", ")),#
  "', deleting. ",sep="")#
#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
data <- data[which(badrows<=5),]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_rows_for_removal,#
  "% of variables data missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", "))#
,", deleting. ",sep="")
data
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
data <- titanic3#
#
par(mfrow=c(2,1)) #2x2 plot#
jpeg(file=mypath)#
mypath <- file.path(path,paste("myplot_", "Missingness", ".jpg", sep = ""))#
#
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))#
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))#
#
EmailMessage = "I'm assuming your files are Missing not at random. Any blank data is converted to NA"#
#
data[data == ""] <- NA#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
removecols=names(badcols[badcols>=Missing_cols_for_removal])#
data <- data[ , -which(names(data) %in% removecols)]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for column(s) '",#
    do.call(paste, c(as.list(removecols),sep=", ")),#
  "', deleting. ",sep="")#
#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
data <- data[which(badrows<=5),]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_rows_for_removal,#
  "% of variables data missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", "))#
,", deleting. ",sep="")#
#
data#
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))#
dev.off()
dev.off()
data <- titanic3#
#
par(mfrow=c(1,2)) #2x2 plot#
#jpeg(file=mypath)#
#mypath <- file.path(path,paste("plots/myplot_", "Missingness", ".jpg", sep = ""))#
#
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))#
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))#
#
EmailMessage = "I'm assuming your files are Missing not at random. Any blank data is converted to NA"#
#
data[data == ""] <- NA#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
removecols=names(badcols[badcols>=Missing_cols_for_removal])#
data <- data[ , -which(names(data) %in% removecols)]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for column(s) '",#
    do.call(paste, c(as.list(removecols),sep=", ")),#
  "', deleting. ",sep="")#
#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
data <- data[which(badrows<=5),]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_rows_for_removal,#
  "% of variables data missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", "))#
,", deleting. ",sep="")#
#
data#
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
par(mfrow=c(1,2)) #2x2 plot
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
plot()
plot(x)
par(mfrow=c(1,3)) #2x2 plot
aggr_plot <- aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
dev.off
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))
aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))
dev.off
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
call("aggr",aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c('BEFORE: Histogram of missing data','Pattern')))#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
call("aggr",data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c('BEFORE: Histogram of missing data','Pattern'))#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
do.call("aggr",data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c('BEFORE: Histogram of missing data','Pattern'))#
dev.off()
call("aggr","data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c('BEFORE: Histogram of missing data','Pattern')")#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
call("aggr","data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c('BEFORE: Histogram of missing data','Pattern')")#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
call("aggr","data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c('BEFORE: Histogram of missing data','Pattern')")#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
aggr(data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
aggr(data, params)#
#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
call("aggr",data,params)#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
call("aggr",data,params)#
dev.off()
do.call("aggr",data,params)
eval("aggr",data,params)
do.call("aggr",data,params)
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
do.call("aggr",c(data,params))#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
do.call("aggr",c(data,params))#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
do.call("aggr",c(data,params))#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
do.call("aggr",c(data,params))#
dev.off()
data <- titanic3
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
do.call("aggr",c(data,params))#
dev.off()
do.call("aggr",data,params)
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
do.call("aggr",data,params)#
dev.off()
params = c(data,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
do.call("aggr",params)
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
params = c(data,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
do.call("aggr",params)#
dev.off()
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
#
params = c(data,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))#
#aggr(data, params)#
do.call("aggr",data)#
dev.off()
aggr(data, params)
aggr(data, params)
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))
aggr(data, params)
do.call("aggr",data)
aggr(data)
aggr(data)
do.call("aggr",data)
do.call("aggr",c(data))
data
aggr(data)
eval(call("aggr",data))
eval(call("aggr",data,params))
eval(call("aggr",data))
params = c(col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern"))
eval(call("aggr",data,params))
eval(call("aggr",data),params)
eval(call("aggr",data,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern")))
jpeg(file=mypath)#
mypath <- file.path(path,paste("plots/myplot_", "Before_Missingness", ".jpg", sep = ""))#
eval(call("aggr",data,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(df), cex.axis=.7, gap=3, ylab=c("BEFORE: Histogram of missing data","Pattern")))#
dev.off()
print_and_save_graph <- function(execute_function,data,file_name){#
  jpeg(file=mypath)#
  mypath <- file.path(path,paste("plots/",file_name, ".jpg", sep = ""))#
  eval(call(execute_function,data,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data), cex.axis=.7, gap=3, ylab=c(file_name)))#
  dev.off()#
}
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")
print_and_save_graph <- function(execute_function,data2,file_name){#
  jpeg(file=mypath)#
  mypath <- file.path(path,paste("plots/",file_name, ".jpg", sep = ""))#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2), cex.axis=.7, gap=3, ylab=c(file_name)))#
  dev.off()#
}
print_and_save_graph <- function(execute_function,new_data,file_name){#
data2=new_data#
  jpeg(file=mypath)#
  mypath <- file.path(path,paste("plots/",file_name, ".jpg", sep = ""))#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2), cex.axis=.7, gap=3, ylab=c(file_name)))#
  dev.off()#
}
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")
print_and_save_graph <- function(execute_function,new_data,file_name){#
data2=new_data#
  jpeg(file=mypath)#
  mypath <- file.path(path,paste("plots/",file_name, ".jpg", sep = ""))#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2), cex.axis=.7, gap=3, ylab=file_name))#
  dev.off()#
}
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")
print_and_save_graph <- function(execute_function,new_data,file_name){#
data2=new_data#
  jpeg(file=mypath)#
  mypath <- file.path(path,paste("plots/",file_name, ".jpg", sep = ""))#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2)))#
  dev.off()#
}
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")
data[data == ""] <- NA#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
removecols=names(badcols[badcols>=Missing_cols_for_removal])#
data <- data[ , -which(names(data) %in% removecols)]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_cols_for_removal,#
  "% of variables data missing for column(s) '",#
    do.call(paste, c(as.list(removecols),sep=", ")),#
  "', deleting. ",sep="")#
#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
data <- data[which(badrows<=5),]#
#
EmailMessage = paste(EmailMessage," More than ",#
  Missing_rows_for_removal,#
  "% of variables data missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", "))#
,", deleting. ",sep="")#
#
print_and_save_graph("aggr",data,"After_Missingness_Adjustment")
print_and_save_graph("aggr",data,"After_Missingness_Adjustment")
print_and_save_graph <- function(execute_function,new_data,file_name){#
  data2=new_data#
  jpeg(file=mypath)#
  mypath <- file.path(path,paste("plots/",file_name, ".jpg", sep = ""))#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2)))#
  dev.off()#
}
print_and_save_graph("aggr",data,"After_Missingness_Adjustment")
print_and_save_graph <- function(execute_function,new_data,file_name){#
  data2=new_data#
  jpeg(file=mypath)#
  mypath <- file.path(path,paste("plots/",file_name, ".jpg", sep = ""))#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2)))#
  dev.off()#
}
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")
print_and_save_graph <- function(execute_function,new_data,file_name){#
  data2=new_data#
  jpeg(file=mypath)#
  mypath <- file.path(path,paste("plots/",file_name, ".jpg", sep = ""))#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2)))#
  dev.off()#
}
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")
ls()
rm(print_and_save_graph)
print_and_save_graph <- function(execute_function,new_data,file_name){#
  data2=new_data#
  jpeg(file=mypath)#
  mypath <- file.path(path,paste("plots/",file_name, ".jpg", sep = ""))#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2)))#
  dev.off()#
}
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")
print_and_save_graph
print_and_save_graph <- function(execute_function,new_data,file_name){#
  data2=new_data#
  mypath <- file.path(path,paste("plots/",file_name, ".jpg", sep = ""))#
  jpeg(file=mypath)#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2)))#
  dev.off()#
}
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")
badcols = apply(data,2,pMiss)
badcols
data <- titanic3
badcols = apply(data,2,pMiss)
badcols
sum(badcols)
badrows = apply(data,1,pMiss)
badrows
sum(badrows)
sum(badrows[which(badrows<=5)])
sum(badrows[which(badrows>=5)])
badrows[which(badrows>=5)]
badrows[which(badrows>=5)]
data[data == ""] <- NA
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")#
#
if(sum(badcols)>0){#
#
  print_and_save_graph("aggr",data,"After_Column_Adjustment")#
  removecols=names(badcols[badcols>=Missing_cols_for_removal])#
  data <- data[ , -which(names(data) %in% removecols)]#
#
  EmailMessage = paste(EmailMessage," BAD NEWS SUCKA.  More than ",Missing_cols_for_removal,"% of variables data missing for column(s) '",do.call(paste, c(as.list(removecols),sep=", ")),"', deleting. ",sep="")#
}
badrows = apply(data,1,pMiss)
badrows
badrows[whihc(badrows>=5)]
badrows[whihc(badrows>-=5)]
badrows[whihc(badrows>=5)]
badrows[which(badrows>=5)]
sum(badrows[which(badrows>=5)]))
sum(badrows[which(badrows>=5)]))
sum(badrows[which(badrows>=5)])
Email_file_to_Slack <- function(Body,File_Location){#
  send.mail(from = "mrtdatascientist@gmail.com",#
  to = c("mrt.9msiu@zapiermail.com"),#
  #subject = Body,#
  body = Body,#
  html = FALSE,#
  smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "mrtdatascientist@gmail.com", passwd = "ipitythefool", ssl = TRUE),#
  attach.files = c(File_Location),#
  authenticate = TRUE,#
  send = TRUE)#
}
EmailBody=c()#
EmailAttachments=c()#
EmailMessage = "I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == \\"\\"] <- NA."#
#
data <- FIPS#
data <- titanic3
EmailMessage = "I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == \"\""] <- NA."
EmailMessage = "I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == """"] <- NA."
EmailMessage = "I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == ''] <- NA."
EmailBody=c()#
EmailAttachments=c()#
EmailMessage = "I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == ''] <- NA."#
#
data <- FIPS#
data <- titanic3
#par(mfrow=c(1,3)) #2x2 plot#
data[data == ""] <- NA#
#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")#
EmailAttachments=c(EmailAttachments,paste(path,"/plots/","Before_Missingness_Adjustment.jpg"))#
#
if(sum(badcols)>0){#
  removecols=names(badcols[badcols>=Missing_cols_for_removal])#
  data <- data[ , -which(names(data) %in% removecols)]#
#
  EmailMessage = paste(EmailMessage," BAD NEWS SUCKA.  More than ",Missing_cols_for_removal,"% of variables data missing for column(s) '",do.call(paste, c(as.list(removecols),sep=", ")),"', deleting. ",sep="")#
  print_and_save_graph("aggr",data,"After_Column_Removal")#
  EmailAttachments=c(EmailAttachments,paste(path,"/plots/","After_Column_Removal.jpg"))#
}#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
#
if(sum(badrows[which(badrows>=5)])){#
#
  data <- data[which(badrows<=5),]#
#
  EmailMessage = paste(EmailMessage," WHOHA.  More than ",#
    Missing_rows_for_removal,#
    "% of variables were missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", "))#
  ,", so I deleted them! CLEAN YO DATA. ",sep="")#
  print_and_save_graph("aggr",data,"After_Row_Removal")#
  EmailAttachments=c(EmailAttachments,paste(path,"/plots/","After_Row_Removal.jpg"))#
}
Email_file_to_Slack(EmailBody,EmailAttachments)
EmailAttachments
EmailAttachments=c()
EmailAttachments=c(EmailAttachments,paste(path,"/plots/","Before_Missingness_Adjustment.jpg",sep=""))
EmailAttachments
EmailAttachments=c(EmailAttachments,paste(path,"/plots/","After_Column_Removal.jpg",sep=""))
EmailAttachments=c(EmailAttachments,paste(path,"/plots/","After_Row_Removal.jpg",sep=""))
EmailAttachments
Email_file_to_Slack(EmailBody,EmailAttachments)
Email_file_to_Slack <- function(Body,File_Location){#
  send.mail(from = "mrtdatascientist@gmail.com",#
  to = c("mrt.9msiu@zapiermail.com"),#
  #subject = Body,#
  body = Body,#
  html = FALSE,#
  smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "mrtdatascientist@gmail.com", passwd = "ipitythefool", ssl = TRUE),#
  attach.files = File_Location,#
  authenticate = TRUE,#
  send = TRUE)#
}
Email_file_to_Slack(EmailBody,EmailAttachments)
Email_file_to_Slack <- function(Body,File_Location){#
  send.mail(from = "mrtdatascientist@gmail.com",#
  to = c("mrt.9msiu@zapiermail.com"),#
  subject = "Hello sucka",#
  body = Body,#
  html = FALSE,#
  smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "mrtdatascientist@gmail.com", passwd = "ipitythefool", ssl = TRUE),#
  attach.files = File_Location,#
  authenticate = TRUE,#
  send = TRUE)#
}
Email_file_to_Slack(EmailBody,EmailAttachments)
EmailBody
EmailMessage
EmailBody = EMailMessage
EmailBody
EmailMessage
EmailBody = EmailMessage
EmailBody
Email_file_to_Slack(EmailBody,EmailAttachments)
Email_file_to_Slack <- function(Body,File_Location){#
  send.mail(from = "mrtdatascientist@gmail.com",#
  to = c("mrt.9msiu@zapiermail.com"),#
  subject = "Hello sucka",#
  body = Body,#
  html = FALSE,#
  smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "mrtdatascientist@gmail.com", passwd = "ipitythefool", ssl = TRUE),#
  attach.files = c(File_Location),#
  authenticate = TRUE,#
  send = TRUE)#
}
Email_file_to_Slack(EmailBody,EmailAttachments)
EmailAttachments=c()
EmailAttachments=c(EmailAttachments,paste(path,"/plots/","Before_Missingness_Adjustment.jpg",sep=""))
Email_file_to_Slack(EmailBody,EmailAttachments)
EmailBody=c()#
EmailAttachments=c()#
EmailBody = "I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == ''] <- NA."#
#
data <- FIPS#
data <- titanic3#
#
#par(mfrow=c(1,3)) #2x2 plot#
data[data == ""] <- NA#
#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")#
EmailAttachments=c(EmailAttachments,paste(path,"/plots/","Before_Missingness_Adjustment.jpg",sep=""))#
#
if(sum(badcols)>0){#
  removecols=names(badcols[badcols>=Missing_cols_for_removal])#
  data <- data[ , -which(names(data) %in% removecols)]#
#
  EmailBody = paste(EmailBody," BAD NEWS SUCKA.  More than ",Missing_cols_for_removal,"% of variables data missing for column(s) '",do.call(paste, c(as.list(removecols),sep=", ")),"', so I'm deleting them. ",sep="")#
  print_and_save_graph("aggr",data,"After_Column_Removal")#
  EmailAttachments=c(EmailAttachments,paste(path,"/plots/","After_Column_Removal.jpg",sep=""))#
}#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
#
if(sum(badrows[which(badrows>=5)])){#
#
  data <- data[which(badrows<=5),]#
#
  EmailBody = paste(EmailBody," WHOHA.  More than ",#
    Missing_rows_for_removal,#
    "% of variables were missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", "))#
  ,", so I deleted them! CLEAN YO DATA. ",sep="")#
  print_and_save_graph("aggr",data,"After_Row_Removal")#
  EmailAttachments=c(EmailAttachments,paste(path,"/plots/","After_Row_Removal.jpg",sep=""))#
}#
#
Email_file_to_Slack(EmailBody,EmailAttachments)
data <- titanic3
data[data == ""] <- NA
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)
badcols
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment")#
EmailAttachments=c(EmailAttachments,paste(path,"/plots/","Before_Missingness_Adjustment.jpg",sep=""))
aggr(data)
Missing_cols_for_removal
badcols>=Missing_cols_for_removal]
badcols[badcols>=Missing_cols_for_removal]
pMiss <- function(x){sum(is.na(x))/length(x)*100}
pMiss <- function(x){sum(is.na(x))/length(x)*100}
badcols = apply(data,2,pMiss)
badcols
View(data)
[data == ""]
data[data == ""]
data <- titanic3
data[data == ""]
data[data == ""]
print_and_save_graph <- function(execute_function,new_data,file_name){#
  data2=new_data#
  mypath <- file.path(imgpath,file_name)#
  jpeg(file=mypath)#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2)))#
  dev.off()#
  return(paste(imgpath,file_name,sep=""))#
}
print_and_save_graph <- function(execute_function,new_data,file_name){#
  data2=new_data#
  mypath <- file.path(imgpath,file_name)#
  jpeg(file=mypath)#
  eval(call(execute_function,data2,col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(data2)))#
  dev.off()#
  return(paste(imgpath,file_name,sep=""))#
}
data <- FIPS#
data <- titanic3
data[data == ""] <- NA#
#
fileloc <- print_and_save_graph("aggr",data,"Before_Missingness_Adjustment.jpg")#
Email_file_to_Slack("I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == ''] <- NA.",fileloc)
imgpath = "/Users/avi/boxer/AshlyMadison/plots/"
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment.jpg")
print_and_save_graph("aggr",data,"Before_Missingness_Adjustment.jpg")
fileloc <- print_and_save_graph("aggr",data,"Before_Missingness_Adjustment.jpg")
fileloc
Email_file_to_Slack("I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == ''] <- NA.",fileloc)
fileloc <- print_and_save_graph("aggr",data,"Before_Missingness_Adjustment.jpg") #
Email_file_to_Slack("I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == ''] <- NA.  Here's what your awful data looks like before I work my magic. You don't rehearse Mr. T, you just turn him loose.",fileloc)#
#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)
if(sum(badcols)>0){#
  #columns to remove#
  removecols=names(badcols[badcols>=Missing_cols_for_removal])#
  data <- data[,-which(names(data) %in% removecols)]#
#
  fileloc <- print_and_save_graph("aggr",data,"After_Column_Removal.jpg")#
  Email_file_to_Slack(paste("BAD NEWS SUCKA.  More than ",Missing_cols_for_removal,"% of variables data missing for column(s) '",do.call(paste, c(as.list(removecols),sep=", ")),"', so I'm deleting them. ",sep=""),fileloc)#
}
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
if(sum(badrows[which(badrows>=5)])){#
  #Rows to remove#
  data <- data[which(badrows<=Missing_rows_for_removal),]#
#
  fileloc <- print_and_save_graph("aggr",data,"After_Row_Removal.jpg")#
  Email_file_to_Slack(paste(" WHOHA.  More than ",Missing_rows_for_removal,"% of variables were missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", ")),", so I deleted them! CLEAN YO DATA. ",sep=""),fileloc)#
}
data <- FIPS
data[data == ""] <- NA#
#
fileloc <- print_and_save_graph("aggr",data,"Before_Missingness_Adjustment.jpg") #
Email_file_to_Slack("I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == ''] <- NA.  Here's what your awful data looks like before I work my magic. You don't rehearse Mr. T, you just turn him loose.",fileloc)#
#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
#
if(sum(badcols)>0){#
  #columns to remove#
  removecols=names(badcols[badcols>=Missing_cols_for_removal])#
  data <- data[,-which(names(data) %in% removecols)]#
#
  fileloc <- print_and_save_graph("aggr",data,"After_Column_Removal.jpg")#
  Email_file_to_Slack(paste("BAD NEWS SUCKA.  More than ",Missing_cols_for_removal,"% of variables data missing for column(s) '",do.call(paste, c(as.list(removecols),sep=", ")),"', so I deleted them. ",sep=""),fileloc)#
} #
#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
if(sum(badrows[which(badrows>=5)])){#
  #Rows to remove#
  data <- data[which(badrows<=Missing_rows_for_removal),]#
#
  fileloc <- print_and_save_graph("aggr",data,"After_Row_Removal.jpg")#
  Email_file_to_Slack(paste(" WHOHA.  More than ",Missing_rows_for_removal,"% of variables were missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", ")),", so I deleted them! CLEAN YO DATA. ",sep=""),fileloc)#
}
loadAllAMMysqlData()
data <- titanic3#
#
data[data == ""] <- NA#
#
fileloc <- print_and_save_graph("aggr",data,"Before_Missingness_Adjustment.jpg") #
Email_file_to_Slack("I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == ''] <- NA.  Here's what your awful data looks like before I work my magic. You don't rehearse Mr. T, you just turn him loose.",fileloc)#
#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
#
if(sum(badcols)>0){#
  #columns to remove#
  removecols=names(badcols[badcols>=Missing_cols_for_removal])#
  data <- data[,-which(names(data) %in% removecols)]#
#
  fileloc <- print_and_save_graph("aggr",data,"After_Column_Removal.jpg")#
  Email_file_to_Slack(paste("BAD NEWS SUCKA.  More than ",Missing_cols_for_removal,"% of variables data missing for column(s) '",do.call(paste, c(as.list(removecols),sep=", ")),"', so I deleted them. ",sep=""),fileloc)#
} #
#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
if(sum(badrows[which(badrows>=5)])){#
  #Rows to remove#
  data <- data[which(badrows<=Missing_rows_for_removal),]#
#
  fileloc <- print_and_save_graph("aggr",data,"After_Row_Removal.jpg")#
  Email_file_to_Slack(paste(" WHOHA.  More than ",Missing_rows_for_removal,"% of variables were missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", ")),", so I deleted them! CLEAN YO DATA. ",sep=""),fileloc)#
}
badrows = apply(data,1,pMiss)
badrows
sum(badrows()
sum(badrows()))
sum(badrows())
sum(badrows())
sum(badrows)
data <- titanic3#
#
data[data == ""] <- NA#
#
fileloc <- print_and_save_graph("aggr",data,"Before_Missingness_Adjustment.jpg") #
Email_file_to_Slack("I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == ''] <- NA.  Here's what your awful data looks like before I work my magic. You don't rehearse Mr. T, you just turn him loose.",fileloc)#
#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
#
if(sum(badcols)>0){#
  #columns to remove#
  removecols=names(badcols[badcols>=Missing_cols_for_removal])#
  data <- data[,-which(names(data) %in% removecols)]#
#
  fileloc <- print_and_save_graph("aggr",data,"After_Column_Removal.jpg")#
  Email_file_to_Slack(paste("BAD NEWS SUCKA.  More than ",Missing_cols_for_removal,"% of variables data missing for column(s) '",do.call(paste, c(as.list(removecols),sep=", ")),"', so I deleted them. ",sep=""),fileloc)#
}
marginplot(data)
data
data <- airquality
data[data == ""] <- NA#
#
fileloc <- print_and_save_graph("aggr",data,"Before_Missingness_Adjustment.jpg") #
Email_file_to_Slack("I'm assuming your files are Missing not at random. I converted blank columns to NA using data[data == ''] <- NA.  Here's what your awful data looks like before I work my magic. You don't rehearse Mr. T, you just turn him loose.",fileloc)#
#
#Checking for more than 5% missing values in cols#
pMiss <- function(x){sum(is.na(x))/length(x)*100}#
badcols = apply(data,2,pMiss)#
#
if(sum(badcols)>0){#
  #columns to remove#
  removecols=names(badcols[badcols>=Missing_cols_for_removal])#
  data <- data[,-which(names(data) %in% removecols)]#
#
  fileloc <- print_and_save_graph("aggr",data,"After_Column_Removal.jpg")#
  Email_file_to_Slack(paste("BAD NEWS SUCKA.  More than ",Missing_cols_for_removal,"% of variables data missing for column(s) '",do.call(paste, c(as.list(removecols),sep=", ")),"', so I deleted them. ",sep=""),fileloc)#
} #
#
#Checking for more than 5% missing values in rows#
badrows = apply(data,1,pMiss)#
if(sum(badrows[which(badrows>=5)])){#
  #Rows to remove#
  data <- data[which(badrows<=Missing_rows_for_removal),]#
#
  fileloc <- print_and_save_graph("aggr",data,"After_Row_Removal.jpg")#
  Email_file_to_Slack(paste(" WHOHA.  More than ",Missing_rows_for_removal,"% of variables were missing for row(s) ",do.call(paste, c(as.list(which(badrows>Missing_rows_for_removal)), sep=", ")),", so I deleted them! CLEAN YO DATA. ",sep=""),fileloc)#
}
complete(tempData,1)
?complete
View(data)
data <- airquality
complete(data,1)
mice::complete(data,1)
densityplot(tempData)
densityplot(data)
densityplot(as.data.frame(data))
densityplot(data)
data[1]
data[,]
densityplot(data[,])
class(data[,])
class(data[,1])
class(data[1,])
class(data[1:4])
tempData <- mice(data,m=5,maxit=50,meth='pmm',seed=500)
summary(tempData)
completedData <- complete(tempData,1)
View(completedData)
data <- airquality
tempData <- mice(data,m=5,maxit=50,meth='pmm',seed=500)#
summary(tempData)#
completedData <- complete(tempData,1)
densityplot(tempData)
densityplot(tempData)
densityplot(tempData)
par(mfrow=c(2,2)) #2x2 plot#
densityplot(tempData)
par(mfrow=c(2,2)) #2x2 plot#
densityplot(tempData)
dev.off()
dev.off()
dev.off()
dev.off()
densityplot(tempData)
par(mfrow=c(2,2)) #2x2 plot
par(mfrow=c(2,2)) #2x2 plot
densityplot(tempData)
View(tempData)
tempData
data <- titanic3
tempData <- mice(data,m=5,maxit=50,meth='pmm',seed=500)#
summary(tempData)#
completedData <- complete(tempData,1)
